name: Run Playwright Tests

on:
  workflow_dispatch:
    inputs:
      TEST_SUITE:
        description: "Select test suite to run"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - regression
          - webTests
          - APITests
          - SafariNewConfig
  schedule:
    - cron: "0 23 * * *" # 6h sáng VN = 23h hôm trước UTC

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    env:
      HOME: ${{ github.workspace }}
      TEST_SUITE: ${{ github.event.inputs.TEST_SUITE || 'all' }}
      BUILD_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Clean old reports
        run: |
          rm -rf allure-results playwright-report combined-report || true

      - name: Run regression tests
        if: ${{ env.TEST_SUITE == 'regression' || env.TEST_SUITE == 'all' }}
        run: npm run regression
        continue-on-error: true

      - name: Run webTests
        if: ${{ env.TEST_SUITE == 'webTests' || env.TEST_SUITE == 'all' }}
        run: npm run webTests
        continue-on-error: true

      - name: Run API tests
        if: ${{ env.TEST_SUITE == 'APITests' || env.TEST_SUITE == 'all' }}
        run: npm run APITests
        continue-on-error: true

      - name: Run SafariNewConfig tests
        if: ${{ env.TEST_SUITE == 'SafariNewConfig' || env.TEST_SUITE == 'all' }}
        run: npm run SafariNewConfig
        continue-on-error: true

      - name: Generate Allure Report
        run: |
          npx allure generate allure-results --clean -o allure-report

      - name: Derive repo name for Pages URLs
        run: echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Prepare combined report folder
        run: |
          mkdir -p combined-report/allure
          mkdir -p combined-report/playwright
          cp -r allure-report/* combined-report/allure/ || true
          cp -r playwright-report/* combined-report/playwright/ || true
        if: always()

      # 🟢 Extract stats từ Allure và Playwright
      - name: Extract test stats
        if: always()
        run: |
          echo "📊 Extracting stats..."
          # Allure summary.json
          if [ -f allure-report/widgets/summary.json ]; then
            ALLURE_TOTAL=$(jq '.statistic.total' allure-report/widgets/summary.json)
            ALLURE_PASSED=$(jq '.statistic.passed' allure-report/widgets/summary.json)
            ALLURE_FAILED=$(jq '.statistic.failed' allure-report/widgets/summary.json)
            ALLURE_BROKEN=$(jq '.statistic.broken' allure-report/widgets/summary.json)
            ALLURE_SKIPPED=$(jq '.statistic.skipped' allure-report/widgets/summary.json)
            ALLURE_FLAKY=$(jq '.statistic.flaky' allure-report/widgets/summary.json)
            echo "ALLURE_TOTAL=$ALLURE_TOTAL" >> $GITHUB_ENV
            echo "ALLURE_PASSED=$ALLURE_PASSED" >> $GITHUB_ENV
            echo "ALLURE_FAILED=$ALLURE_FAILED" >> $GITHUB_ENV
            echo "ALLURE_BROKEN=$ALLURE_BROKEN" >> $GITHUB_ENV
            echo "ALLURE_SKIPPED=$ALLURE_SKIPPED" >> $GITHUB_ENV
            echo "ALLURE_FLAKY=$ALLURE_FLAKY" >> $GITHUB_ENV
          fi

          # Playwright report.json
          if [ -f playwright-report/report.json ]; then
            PW_TOTAL=$(jq '.stats.total' playwright-report/report.json)
            PW_PASSED=$(jq '.stats.passed' playwright-report/report.json)
            PW_FAILED=$(jq '.stats.failed' playwright-report/report.json)
            PW_FLAKY=$(jq '.stats.flaky' playwright-report/report.json)
            PW_SKIPPED=$(jq '.stats.skipped' playwright-report/report.json)
            echo "PW_TOTAL=$PW_TOTAL" >> $GITHUB_ENV
            echo "PW_PASSED=$PW_PASSED" >> $GITHUB_ENV
            echo "PW_FAILED=$PW_FAILED" >> $GITHUB_ENV
            echo "PW_FLAKY=$PW_FLAKY" >> $GITHUB_ENV
            echo "PW_SKIPPED=$PW_SKIPPED" >> $GITHUB_ENV
          fi

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
        if: always()

      - name: Upload Playwright HTML Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
        if: always()

      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: build/allure-results

      # 🟢 Deploy cả 2 report lên GitHub Pages
      - name: Deploy Reports to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./combined-report
          publish_branch: gh-pages
          force_orphan: true
        if: always()

      # 🟢 Email notification
      - name: Send email with report links
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "${{ job.status == 'success' && '✅' || job.status == 'failure' && '❌' || '⚠️' }} [${{ job.status }}] Test Report - ${{ github.workflow }} #${{ github.run_number }}"
          to: ${{ secrets.SMTP_USERNAME }}
          from: GitHub Actions ${{ secrets.SMTP_USERNAME }}
          content_type: text/html
          body: >
            <html>
              <body>
                  <p>Hello Team,</p>
                  <p>Build workflow #${{ github.run_number }} đã hoàn thành với trạng thái:
                    <b style="color:${{ job.status == 'success' && 'green' || job.status == 'failure' && 'red' || 'orange' }};">
                      ${{ job.status }}
                    </b>
                  </p>

                  <h3>📄 Playwright Stats:</h3>
                  <p>
                    Total: ${{ env.PW_TOTAL }} |
                    Passed: ${{ env.PW_PASSED }} |
                    Failed: ${{ env.PW_FAILED }} |
                    Flaky: ${{ env.PW_FLAKY }} |
                    Skipped: ${{ env.PW_SKIPPED }}
                  </p>

                  <h3>📊 Allure Stats:</h3>
                  <p>
                    Total: ${{ env.ALLURE_TOTAL }} |
                    Passed: ${{ env.ALLURE_PASSED }} |
                    Failed: ${{ env.ALLURE_FAILED }} |
                    Broken: ${{ env.ALLURE_BROKEN }} |
                    Flaky: ${{ env.ALLURE_FLAKY }} |
                    Skipped: ${{ env.ALLURE_SKIPPED }}
                  </p>

                  <p>
                    🔗 <a href="https://${{ github.repository_owner }}.github.io/${{ env.REPO_NAME }}/playwright/" target="_blank">Playwright Report</a><br/>
                    🔗 <a href="https://${{ github.repository_owner }}.github.io/${{ env.REPO_NAME }}/allure/" target="_blank">Allure Report</a>
                  </p>
              </body>
            </html>
        if: always()

      # 🟢 Slack Notification
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "🔔 *${{ github.workflow }}* #${{ github.run_number }} - *${{ job.status }}*",
              "attachments": [
                {
                  "color": "${{ job.status == 'success' && 'good' || job.status == 'failure' && 'danger' || 'warning' }}",
                  "fields": [
                    {
                      "title": "Build URL",
                      "value": "<${{ env.BUILD_URL }}|View Build>",
                      "short": false
                    },
                    {
                      "title": "📄 Playwright Stats",
                      "value": "Total: ${{ env.PW_TOTAL }} | Passed: ${{ env.PW_PASSED }} | Failed: ${{ env.PW_FAILED }} | Flaky: ${{ env.PW_FLAKY }} | Skipped: ${{ env.PW_SKIPPED }}",
                      "short": false
                    },
                    {
                      "title": "📊 Allure Stats",
                      "value": "Total: ${{ env.ALLURE_TOTAL }} | Passed: ${{ env.ALLURE_PASSED }} | Failed: ${{ env.ALLURE_FAILED }} | Broken: ${{ env.ALLURE_BROKEN }} | Flaky: ${{ env.ALLURE_FLAKY }} | Skipped: ${{ env.ALLURE_SKIPPED }}",
                      "short": false
                    },
                    {
                      "title": "Reports",
                      "value": "<https://${{ github.repository_owner }}.github.io/${{ env.REPO_NAME }}/playwright/|Playwright Report> | <https://${{ github.repository_owner }}.github.io/${{ env.REPO_NAME }}/allure/|Allure Report>",
                      "short": false
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
